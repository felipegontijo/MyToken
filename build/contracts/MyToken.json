{
  "contractName": "MyToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/felipegontijo/MyToken/contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/felipegontijo/MyToken/contracts/MyToken.sol\":{\"keccak256\":\"0xfc7db6888b3edcb68a2519d3373fbb0c6623cc7801e85383db4c29e83cc4d17d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82c0d1798a980e67ce717f0950c44e79e637bb540b36b655b5c4a1e727b56b2d\",\"dweb:/ipfs/Qme4YQesUi8R3qQpp5rchXsXJ5rtwqzrzzVXEoYSC931qT\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x28a51874088c4eab8de88cdab67386d28bd93fe81a74601710870c1ace8dbcf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89e718826e727bef405ddef902f98a6061ecf1b11baca10836e45f19288afbec\",\"dweb:/ipfs/QmTdre4apVg7z93e8A14HzdMb1d3iW98KMNbrWTHnVy6py\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc7831d3668c6c2017e1d1aa893e74a06e0b312bebe3861c314a853cd157567b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b939c0010d2a980f1477335d38f5e18f2dbb5eea827c36088370fd42b5161d8\",\"dweb:/ipfs/QmeKphSzZun8D44HXWma8kLQy2fs6RA4EYSxrwGB8EwCtu\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfec8849eddd43c0300f6c9e5c31f1eac7eae16843b213d4c0219a424cd28a3d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e379c3e760f5717939fbb285a99ef9ea3085c6515df01541c93fe8df5acdf673\",\"dweb:/ipfs/QmWsweUSKMFvJZaLivLp43uMnD5Hz54kxRGTsWtc7Kixpq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x0212ebc746f60a8352065a0e812a2e0fda32980a6260fecaf6fb4e147fa7aa47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0958150db8e904f6158eef40f42a5f84d034b3ce6b03ac30c223dc4cea6243f6\",\"dweb:/ipfs/Qma2F9JT4UrrvFV8zEqJgtbGh89seGLRXpYWFk2cZQxdbC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x50acdb22470f258eed61844484c51ecd5e07d5955e1bf0d8a79504c0eb90161d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69609651cb8040218ea95311de20379988e907d82170dc5a4654779e5f93b686\",\"dweb:/ipfs/QmWKR69YfyRNebEcvehJoKAqKNnhk2LXtkBJH5XE9W3Cyy\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000df938038062000df9833981810160405260208110156200003757600080fd5b5051604080518082018252600781527f4d79546f6b656e0000000000000000000000000000000000000000000000000060208281019182528351808501909452600484527f4d494e4500000000000000000000000000000000000000000000000000000000908401528151919291620000b39160039162000304565b508051620000c990600490602084019062000304565b50506005805460ff19166012179055508062000131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018062000dd16028913960400191505060405180910390fd5b6200014633826401000000006200014d810204565b50620003a0565b600160a060020a038216620001c357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620001da6000838364010000000062000283810204565b600254620001f79082640100000000620005906200028882021704565b600255600160a060020a0382166000908152602081905260409020546200022d9082640100000000620005906200028882021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b600082820183811015620002fd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034757805160ff191683800117855562000377565b8280016001018555821562000377579182015b82811115620003775782518255916020019190600101906200035a565b506200038592915062000389565b5090565b5b808211156200038557600081556001016200038a565b610a2180620003b06000396000f3fe608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e57806339509351146101f657806370a082311461022257806395d89b4114610248578063a457c2d714610250578063a9059cbb1461027c578063dd62ed3e146102a8576100c6565b806306fdde03146100cb578063095ea7b31461014857806318160ddd1461018857806323b872dd146101a2578063313ce567146101d8575b600080fd5b6100d36102d6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101746004803603604081101561015e57600080fd5b50600160a060020a03813516906020013561036c565b604080519115158252519081900360200190f35b610190610389565b60408051918252519081900360200190f35b610174600480360360608110156101b857600080fd5b50600160a060020a0381358116916020810135909116906040013561038f565b6101e0610416565b6040805160ff9092168252519081900360200190f35b6101746004803603604081101561020c57600080fd5b50600160a060020a03813516906020013561041f565b6101906004803603602081101561023857600080fd5b5035600160a060020a031661046d565b6100d3610488565b6101746004803603604081101561026657600080fd5b50600160a060020a0381351690602001356104e9565b6101746004803603604081101561029257600080fd5b50600160a060020a038135169060200135610551565b610190600480360360408110156102be57600080fd5b50600160a060020a0381358116916020013516610565565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b60006103806103796105f4565b84846105f8565b50600192915050565b60025490565b600061039c8484846106ea565b61040c846103a86105f4565b6104078560405180606001604052806028815260200161095660289139600160a060020a038a166000908152600160205260408120906103e66105f4565b600160a060020a03168152602081019190915260400160002054919061084b565b6105f8565b5060019392505050565b60055460ff1690565b600061038061042c6105f4565b84610407856001600061043d6105f4565b600160a060020a03908116825260208083019390935260409182016000908120918c168152925290205490610590565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103625780601f1061033757610100808354040283529160200191610362565b60006103806104f66105f4565b84610407856040518060600160405280602581526020016109c760259139600160006105206105f4565b600160a060020a03908116825260208083019390935260409182016000908120918d1681529252902054919061084b565b600061038061055e6105f4565b84846106ea565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156105ed576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b600160a060020a0383166106405760405160e560020a62461bcd0281526004018080602001828103825260248152602001806109a36024913960400191505060405180910390fd5b600160a060020a0382166106885760405160e560020a62461bcd02815260040180806020018281038252602281526020018061090e6022913960400191505060405180910390fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0383166107325760405160e560020a62461bcd02815260040180806020018281038252602581526020018061097e6025913960400191505060405180910390fd5b600160a060020a03821661077a5760405160e560020a62461bcd0281526004018080602001828103825260238152602001806108eb6023913960400191505060405180910390fd5b6107858383836108e5565b6107c28160405180606001604052806026815260200161093060269139600160a060020a038616600090815260208190526040902054919061084b565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f19082610590565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108dd5760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108a257818101518382015260200161088a565b50505050905090810190601f1680156108cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d6c2c69aa5591751fa6582dff9ba234fb4045f2ba9afc4d330dafa04e008e81664736f6c63430007000033494e495449414c5f535550504c592068617320746f2062652067726561746572207468616e203021",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e57806339509351146101f657806370a082311461022257806395d89b4114610248578063a457c2d714610250578063a9059cbb1461027c578063dd62ed3e146102a8576100c6565b806306fdde03146100cb578063095ea7b31461014857806318160ddd1461018857806323b872dd146101a2578063313ce567146101d8575b600080fd5b6100d36102d6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101746004803603604081101561015e57600080fd5b50600160a060020a03813516906020013561036c565b604080519115158252519081900360200190f35b610190610389565b60408051918252519081900360200190f35b610174600480360360608110156101b857600080fd5b50600160a060020a0381358116916020810135909116906040013561038f565b6101e0610416565b6040805160ff9092168252519081900360200190f35b6101746004803603604081101561020c57600080fd5b50600160a060020a03813516906020013561041f565b6101906004803603602081101561023857600080fd5b5035600160a060020a031661046d565b6100d3610488565b6101746004803603604081101561026657600080fd5b50600160a060020a0381351690602001356104e9565b6101746004803603604081101561029257600080fd5b50600160a060020a038135169060200135610551565b610190600480360360408110156102be57600080fd5b50600160a060020a0381358116916020013516610565565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b60006103806103796105f4565b84846105f8565b50600192915050565b60025490565b600061039c8484846106ea565b61040c846103a86105f4565b6104078560405180606001604052806028815260200161095660289139600160a060020a038a166000908152600160205260408120906103e66105f4565b600160a060020a03168152602081019190915260400160002054919061084b565b6105f8565b5060019392505050565b60055460ff1690565b600061038061042c6105f4565b84610407856001600061043d6105f4565b600160a060020a03908116825260208083019390935260409182016000908120918c168152925290205490610590565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103625780601f1061033757610100808354040283529160200191610362565b60006103806104f66105f4565b84610407856040518060600160405280602581526020016109c760259139600160006105206105f4565b600160a060020a03908116825260208083019390935260409182016000908120918d1681529252902054919061084b565b600061038061055e6105f4565b84846106ea565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156105ed576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b600160a060020a0383166106405760405160e560020a62461bcd0281526004018080602001828103825260248152602001806109a36024913960400191505060405180910390fd5b600160a060020a0382166106885760405160e560020a62461bcd02815260040180806020018281038252602281526020018061090e6022913960400191505060405180910390fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0383166107325760405160e560020a62461bcd02815260040180806020018281038252602581526020018061097e6025913960400191505060405180910390fd5b600160a060020a03821661077a5760405160e560020a62461bcd0281526004018080602001828103825260238152602001806108eb6023913960400191505060405180910390fd5b6107858383836108e5565b6107c28160405180606001604052806026815260200161093060269139600160a060020a038616600090815260208190526040902054919061084b565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f19082610590565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108dd5760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108a257818101518382015260200161088a565b50505050905090810190601f1680156108cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d6c2c69aa5591751fa6582dff9ba234fb4045f2ba9afc4d330dafa04e008e81664736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "123:230:1:-:0;;;155:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;155:196:1;2014:141:4;;;;;;;;;;;;155:196:1;2014:141:4;;;;;;;;;;;;;;;;;;;;;;2086:12;;2014:141;;;2086:12;;:5;;:12;:::i;:::-;-1:-1:-1;2108:16:4;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2134:9:4;:14;;-1:-1:-1;;2134:14:4;2146:2;2134:14;;;-1:-1:-1;240:17:1;232:70:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:32;318:10;330:13:::0;312:5:::1;;::::0;::::1;:32;:::i;:::-;155:196:::0;123:230;;7836:370:4;-1:-1:-1;;;;;7919:21:4;;7911:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7987:49;8016:1;8020:7;8029:6;7987:20;;;;:49;:::i;:::-;8062:12;;:24;;8079:6;8062:16;;;;;;:24;:::i;:::-;8047:12;:39;-1:-1:-1;;;;;8117:18:4;;:9;:18;;;;;;;;;;;:30;;8140:6;8117:22;;;;;;:30;:::i;:::-;-1:-1:-1;;;;;8096:18:4;;:9;:18;;;;;;;;;;;:51;;;;8162:37;;;;;;;8096:18;;:9;;8162:37;;;;;;;;;;7836:370;;:::o;10696:92::-;;;;:::o;875:176:3:-;933:7;964:5;;;987:6;;;;979:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:1;875:176;-1:-1:-1;;;875:176:3:o;123:230:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;123:230:1;;;-1:-1:-1;123:230:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "123:230:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4256:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4256:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3263:98;;;:::i;:::-;;;;;;;;;;;;;;;;4882:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4882:317:4;;;;;;;;;;;;;;;;;:::i;3122:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5594:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5594:215:4;;;;;;;;:::i;3419:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3419:117:4;-1:-1:-1;;;;;3419:117:4;;:::i;2414:85::-;;;:::i;6296:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6296:266:4;;;;;;;;:::i;3739:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3739:172:4;;;;;;;;:::i;3969:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3969:149:4;;;;;;;;;;:::i;2220:81::-;2289:5;2282:12;;;;;;;;-1:-1:-1;;2282:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2257:13;;2282:12;;2289:5;;2282:12;;2289:5;2282:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:81;:::o;4256:166::-;4339:4;4355:39;4364:12;:10;:12::i;:::-;4378:7;4387:6;4355:8;:39::i;:::-;-1:-1:-1;4411:4:4;4256:166;;;;:::o;3263:98::-;3342:12;;3263:98;:::o;4882:317::-;4988:4;5004:36;5014:6;5022:9;5033:6;5004:9;:36::i;:::-;5050:121;5059:6;5067:12;:10;:12::i;:::-;5081:89;5119:6;5081:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5081:19:4;;;;;;:11;:19;;;;;;5101:12;:10;:12::i;:::-;-1:-1:-1;;;;;5081:33:4;;;;;;;;;;;;-1:-1:-1;5081:33:4;;;:89;:37;:89::i;:::-;5050:8;:121::i;:::-;-1:-1:-1;5188:4:4;4882:317;;;;;:::o;3122:81::-;3187:9;;;;3122:81;:::o;5594:215::-;5682:4;5698:83;5707:12;:10;:12::i;:::-;5721:7;5730:50;5769:10;5730:11;:25;5742:12;:10;:12::i;:::-;-1:-1:-1;;;;;5730:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5730:25:4;;;:34;;;;;;;;;;;:38;:50::i;3419:117::-;-1:-1:-1;;;;;3511:18:4;3485:7;3511:18;;;;;;;;;;;;3419:117::o;2414:85::-;2485:7;2478:14;;;;;;;;-1:-1:-1;;2478:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:13;;2478:14;;2485:7;;2478:14;;2485:7;2478:14;;;;;;;;;;;;;;;;;;;;;;;;6296:266;6389:4;6405:129;6414:12;:10;:12::i;:::-;6428:7;6437:96;6476:15;6437:96;;;;;;;;;;;;;;;;;:11;:25;6449:12;:10;:12::i;:::-;-1:-1:-1;;;;;6437:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6437:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3739:172::-;3825:4;3841:42;3851:12;:10;:12::i;:::-;3865:9;3876:6;3841:9;:42::i;3969:149::-;-1:-1:-1;;;;;4084:18:4;;;4058:7;4084:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3969:149::o;875:176:3:-;933:7;964:5;;;987:6;;;;979:46;;;;;-1:-1:-1;;;;;979:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:1;875:176;-1:-1:-1;;;875:176:3:o;591:104:2:-;678:10;591:104;:::o;9358:340:4:-;-1:-1:-1;;;;;9459:19:4;;9451:68;;;;-1:-1:-1;;;;;9451:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9537:21:4;;9529:68;;;;-1:-1:-1;;;;;9529:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9608:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9659:32;;;;;;;;;;;;;;;;;9358:340;;;:::o;7036:530::-;-1:-1:-1;;;;;7141:20:4;;7133:70;;;;-1:-1:-1;;;;;7133:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7221:23:4;;7213:71;;;;-1:-1:-1;;;;;7213:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7295:47;7316:6;7324:9;7335:6;7295:20;:47::i;:::-;7373:71;7395:6;7373:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7373:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7353:17:4;;;:9;:17;;;;;;;;;;;:91;;;;7477:20;;;;;;;:32;;7502:6;7477:24;:32::i;:::-;-1:-1:-1;;;;;7454:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;7524:35;;;;;;;7454:20;;7524:35;;;;;;;;;;;;;7036:530;;;:::o;1747:187:3:-;1833:7;1868:12;1860:6;;;;1852:29;;;;-1:-1:-1;;;;;1852:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1903:5:3;;;1747:187::o;10696:92:4:-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\n\ncontract MyToken is ERC20 {\n    constructor(uint256 initialSupply) public ERC20('MyToken', 'MINE') {\n        require(initialSupply > 0, 'INITIAL_SUPPLY has to be greater than 0!');\n        _mint(msg.sender, initialSupply);\n    }\n}\n",
  "sourcePath": "/Users/felipegontijo/MyToken/contracts/MyToken.sol",
  "ast": {
    "absolutePath": "/Users/felipegontijo/MyToken/contracts/MyToken.sol",
    "exportedSymbols": {
      "MyToken": [
        61
      ]
    },
    "id": 62,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 62,
        "sourceUnit": 788,
        "src": "66:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 36,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 787,
              "src": "143:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$787",
                "typeString": "contract ERC20"
              }
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "143:5:1"
          }
        ],
        "contractDependencies": [
          84,
          787,
          865
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 61,
        "linearizedBaseContracts": [
          61,
          787,
          865,
          84
        ],
        "name": "MyToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "222:129:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "240:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "256:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "240:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e495449414c5f535550504c592068617320746f2062652067726561746572207468616e203021",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "259:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_282bd8840f4790cf944fb5bc7004d8011e1c9b132a9fc4ab4471fb858dc35083",
                          "typeString": "literal_string \"INITIAL_SUPPLY has to be greater than 0!\""
                        },
                        "value": "INITIAL_SUPPLY has to be greater than 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_282bd8840f4790cf944fb5bc7004d8011e1c9b132a9fc4ab4471fb858dc35083",
                          "typeString": "literal_string \"INITIAL_SUPPLY has to be greater than 0!\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "232:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "232:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "232:70:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 54,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "318:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "318:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "330:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "312:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "312:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "312:32:1"
                }
              ]
            },
            "documentation": null,
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d79546f6b656e",
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "203:9:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                      "typeString": "literal_string \"MyToken\""
                    },
                    "value": "MyToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d494e45",
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "214:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_458fc043506cc6fea16e7daa38390499ef978846d88dd78fe56678ac9de79444",
                      "typeString": "literal_string \"MINE\""
                    },
                    "value": "MINE"
                  }
                ],
                "id": 44,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 41,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 787,
                  "src": "197:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$787_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "197:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 60,
                  "src": "167:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "166:23:1"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:0:1"
            },
            "scope": 61,
            "src": "155:196:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 62,
        "src": "123:230:1"
      }
    ],
    "src": "32:322:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/felipegontijo/MyToken/contracts/MyToken.sol",
    "exportedSymbols": {
      "MyToken": [
        61
      ]
    },
    "id": 62,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 62,
        "sourceUnit": 788,
        "src": "66:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 36,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 787,
              "src": "143:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$787",
                "typeString": "contract ERC20"
              }
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "143:5:1"
          }
        ],
        "contractDependencies": [
          84,
          787,
          865
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 61,
        "linearizedBaseContracts": [
          61,
          787,
          865,
          84
        ],
        "name": "MyToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "222:129:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "240:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "256:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "240:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e495449414c5f535550504c592068617320746f2062652067726561746572207468616e203021",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "259:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_282bd8840f4790cf944fb5bc7004d8011e1c9b132a9fc4ab4471fb858dc35083",
                          "typeString": "literal_string \"INITIAL_SUPPLY has to be greater than 0!\""
                        },
                        "value": "INITIAL_SUPPLY has to be greater than 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_282bd8840f4790cf944fb5bc7004d8011e1c9b132a9fc4ab4471fb858dc35083",
                          "typeString": "literal_string \"INITIAL_SUPPLY has to be greater than 0!\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "232:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "232:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "232:70:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 54,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "318:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "318:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "330:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "312:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "312:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "312:32:1"
                }
              ]
            },
            "documentation": null,
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d79546f6b656e",
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "203:9:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                      "typeString": "literal_string \"MyToken\""
                    },
                    "value": "MyToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d494e45",
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "214:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_458fc043506cc6fea16e7daa38390499ef978846d88dd78fe56678ac9de79444",
                      "typeString": "literal_string \"MINE\""
                    },
                    "value": "MINE"
                  }
                ],
                "id": 44,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 41,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 787,
                  "src": "197:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$787_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "197:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 60,
                  "src": "167:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "166:23:1"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:0:1"
            },
            "scope": 61,
            "src": "155:196:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 62,
        "src": "123:230:1"
      }
    ],
    "src": "32:322:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x186fda2537302D72d45C9106236f814733B69E30",
      "transactionHash": "0xbf2194e32c48d422da9a70c9c34cc4f98dd1f0f038ee899b6bfddc6935a4a0c9"
    }
  },
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-17T13:15:21.820Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}